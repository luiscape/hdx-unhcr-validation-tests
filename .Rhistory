'Country_TerritoryofResidence_iso3',
'Origin_ReturnedFrom',
'PopulationType',
'Country_TerritoryofResidence',
'period',
'value')
summary(popstats.long$value)
# cleaning years
popstats.long$period <- sub("x", "", popstats.long$period, ignore.case = TRUE)
View(popstats.long)
View(access)
names(access)
access[6] <- NULL
names(access)
access[6] <- NULL
names(access)
View(access)
access[5] <- NULL
View(access)
nameS(access)
names(access)
access[4][1]
access[1,4]
access[3,4]
access[3,4] > 1
as.numeric(access[3,4]) > 1
as.numeric(access[3,4]) > 21
as.numeric(access[3,4]) > 21000
names(acces)
names(access)
access$Refugees <- as.numeric(access$Refugees)
View(access)
?as.numeric
access <- read.csv('data/unhcr-refugee-data.csv')
names(access)
summary(access)
access$Refugees <- as.numeric(gsub(",","",access$Refugees))
View(access)
access$Total.refugees.and.people.in.refugee.like.situations <- NULL
names(access)
View(access)
access$Refugees.assisted.by.UNHCR <- NULL
access$Total.refugees.and.people.in.refugee.like.situations.assisted.by.UNHCR <- NULL
View(access)
View(access)
names(acces)
names(access)
access.recent <- subset(access, access$Year == 2010:2012)
access.recent <- subset(access, access$Year == c(2010:2012))
access.recent <- access[access$Year >= 2010]
access.recent <- access[access$Year >= 2010, ]
View(access.recent)
nrow(access.recent)
nrow(popstats.long)
View(access.recent)
nrow(popstats.long)
nrow(access.recent)
names(popstats.long)
ggplot(popstats.long) + theme_bw() +
geom_bar(aes(period, value), stat = 'identity')
names(access.recent)
ggplot(popstats.long) + theme_bw() +
geom_bar(aes(period, value), stat = 'identity') +
geom_bar(data = access.recent, aes(Year, Refugees), stat = 'identity')
table(access.recent$Year)
access.recent <- access[access$Year >= 2000, ]
table(access.recent$Year)
popstatstable <- table(popstats.long$period)
acctable <- table(access.recent$Year)
names(popstatstable)
# table of years
popstatstable <- data.frame(table(popstats.long$period))
acctable <- data.frame(table(access.recent$Year))
names(popstatstable)
# plotting
ggplot(popstatstable) + theme_bw() +
geom_bar(aes(Var1, Freq), stat = 'identity') +
geom_bar(data = acctable, aes(Var1, Freq), stat = 'identity')
ggplot(popstatstable) + theme_bw() +
geom_bar(aes(Var1, Freq), stat = 'identity',
fill = "$cccccc") +
geom_bar(data = acctable, aes(Var1, Freq),
stat = 'identity', fill = "#404040")
# plotting
ggplot(popstatstable) + theme_bw() +
geom_bar(aes(Var1, Freq), stat = 'identity',
fill = "#cccccc") +
geom_bar(data = acctable, aes(Var1, Freq),
stat = 'identity', fill = "#404040")
# plotting
ggplot(popstatstable) + theme_bw() +
geom_bar(aes(Var1, Freq), stat = 'identity',
fill = "#cccccc", position = "dodge") +
geom_bar(data = acctable, aes(Var1, Freq),
stat = 'identity', fill = "#404040",
position = "dodge")
ggplot(acctable) + theme_bw() +
geom_bar(aes(Var1, Freq),
stat = 'identity', fill = "#404040",
position = "dodge")
ggplot(popstatstable) + theme_bw() +
geom_bar(aes(Var1, Freq), stat = 'identity',
fill = "#cccccc", position = "dodge")
ggplot(popstatstable) + theme_bw() +
geom_bar(aes(Var1, Freq), stat = 'identity',
fill = "#cccccc",
position = "dodge")
popstatstable
acctable
ggplot(acctable) + theme_bw() +
geom_bar(aes(Var1, Freq),
stat = 'identity', fill = "#404040",
position = "dodge")
ggplot(popstats.long) + theme_bw() +
geom_bar(aes(period, value), stat = 'identity')
ggplot(access.recent) + theme_bw() +
geom_bar(data = access.recent, aes(Year, Refugees), stat = 'identity')
# plotting
ggplot(popstats.long) + theme_bw() +
geom_bar(aes(period, value), stat = 'identity')
?match
names(popstats.long)
names(access.recent)
popstats.long$Origin_ReturnedFrom <- NULL
popstats.long$Country_TerritoryofResidence <- NULL
names(popstats.long)
colnames(4) <- 'Year'
colnames(popstats.long)[4] <- 'Year'
names(popstats.long)
colnames(popstats.long)[5] <- 'Refugees'
ncol(access.recent)
ncol(popstats.long)
names(popstats.long)
popstats.long$PopulationType <- NULL
ncol(popstats.long)
ncol(popstats.long)
names(popstats.long)
names(access.recent)
names(access.recent)
colnames(access.recent)[2] <- "Origin_ReturnedFrom_iso3"
colnames(access.recent)[3] <- "Country_TerritoryofResidence_iso3"
names(access.recent)
names(popstats.long)
x <- identical(access.recent, popstats.long)
x
access.recent[order(access.recent$Year), ]
y <- access.recent[order(access.recent$Year), ]
View(y)
popstats.long <- popstats.long[order(popstats.long$Year), ]
x <- identical(access.recent, popstats.long)
x
View(access.recent)
View(popstats.long)
x <- identical(access.recent$Refugees, popstats.long$Refugees)
x
?identical
x <- unique(access.recent$Refugees, popstats.long$Refugees)
View(x)
nrow(access.recent)
nrow(popstats.long)
nrow(unique(access.recent$Refugees))
length(unique(access.recent$Refugees))
length(unique(popstats.long$Refugees))
length(unique(access.recent$Origin_ReturnedFrom_iso3))
length(unique(popstats.long$Origin_ReturnedFrom_iso3))
length(unique(access.recent$Country_TerritoryofResidence_iso3))
length(unique(popstats.long$Country_TerritoryofResidence_iso3))
x1 <- data.frame(table(popstats.long$Country_TerritoryofResidence_iso3))
x2 <- data.frame(table(acess.recent$Country_TerritoryofResidence_iso3))
x2 <- data.frame(table(access.recent$Country_TerritoryofResidence_iso3))
# plotting
ggplot(x1) + theme_bw() +
geom_bar(aes(Var1, Freq), stat = 'identity',
fill = "#cccccc",
position = "dodge")
ggplot(x2) + theme_bw() +
geom_bar(aes(Var1, Freq),
stat = 'identity', fill = "#404040",
position = "dodge")
# plotting
ggplot(x1) + theme_bw() +
geom_bar(aes(Var1, Freq), stat = 'identity',
fill = "#cccccc",
position = "dodge")
# plotting
ggplot(x1) + theme_bw() +
geom_bar(aes(Var1, Freq), stat = 'identity',
fill = "#cccccc")
ggplot(x2) + theme_bw() +
geom_bar(aes(Var1, Freq),
stat = 'identity', fill = "#404040")
length(unique(access.recent$Country_TerritoryofResidence_iso3))
length(unique(popstats.long$Country_TerritoryofResidence_iso3))
length(unique(access.recent$Origin_ReturnedFrom_iso3))
length(unique(popstats.long$Origin_ReturnedFrom_iso3))
setwd("~/Documents/Programming/bcbk6tq")
?cat
db <- dbConnect(SQLite(), dbname="scraperwiki.sqlite")
library(RCurl)
library(sqldf)
db <- dbConnect(SQLite(), dbname="scraperwiki.sqlite")
db <- dbConnect(SQLite(), dbname="scraperwiki.sqlite")
test <- dbReadTable(db, "value")
View(test)
table(test$period)
dbDisconnect(db)
db <- dbConnect(SQLite(), dbname="scraperwiki2.sqlite")
test <- dbReadTable(db, "value")
View(test)
table(test$period)
setwd("~/Documents/Programming/hdx-unhcr-data")
# comparing countries
x1 <- data.frame(table(popstats.long$Country_TerritoryofResidence_iso3))
x2 <- data.frame(table(access.recent$Country_TerritoryofResidence_iso3))
length(unique(access.recent$Country_TerritoryofResidence_iso3))
length(unique(popstats.long$Country_TerritoryofResidence_iso3))
length(unique(access.recent$Refugees))
length(unique(popstats.long$Refugees))
source('load_data.R')
setwd("~/Documents/Programming/bcbk6tq/tool/code")
db <- dbConnect(SQLite(), dbname="scraperwiki.sqlite")
test <- dbReadTable(db, "value")
dbDisconnect(db)
db <- dbConnect(SQLite(), dbname="scraperwiki.sqlite")
test <- dbReadTable(db, "value")
View(test)
table(test$period)
dbDisconnect(db)
db <- dbConnect(SQLite(), dbname="scraperwiki.sqlite")
test <- dbReadTable(db, "value")
table(test$period)
setwd("~/Documents/Programming/hdx-unhcr-data")
setwd("~/Documents/Programming/hdx-unhcr-validation-tests")
source('load_data.R')
View(access)
names(access)
CheckConsistency <- function() {
for (i in 1:nrow(access)) {
if (access[i, 4] == access[i, 5]) {
access$is_equal_refugee <<- TRUE
} else access$is_equal_refugee <<- FALSE
access$is_equal_total <<- if (access[i, 6] == access[i, 7]) {
access$is_equal_total <<- TRUE
} else access$is_equal_total <<- FALSE
}
}
CheckConsistency()
access[1, 4]
access[1, 5])
access[1, 5]
access[, 5]
CheckConsistency <- function() {
for (i in 1:nrow(access)) {
if (as.numeric(access[i, 4]) == as.numeric(access[i, 5])) {
access$is_equal_refugee <<- TRUE
} else access$is_equal_refugee <<- FALSE
access$is_equal_total <<- if (as.numeric(access[i, 6]) == as.numeric(access[i, 7])) {
access$is_equal_total <<- TRUE
} else access$is_equal_total <<- FALSE
}
}
CheckConsistency()
View(access)
table(access$is_equal_refugee)
nrow(access)
table(access$is_equal_total)
as.numeric(access[1, 4]) == as.numeric(access[1, 5])
as.numeric(access[1, 5])
as.numeric(access[2, 5])
access[2, 5]
access[2, 4]
access[2, 4] == access[2,4]
access[2, 4] == access[2,5]
access[2, 4] == na.omit(access[2,5])
access[2, 4] == as.numeric(access[2,5])
as.numeric(access[2,5])
unclass(access[2,5])
class(access[2,5])
numeric(access[2,5])
numeric(access[61454,5])
numeric(access[23441,5])
(access[23441,5])
(access[34444,5])
source('load_data.R')
source('load_data.R')
names(access)
access$Refugees <- as.numeric(access$Refugees)
access$Refugees.assisted.by.UNHCR <- as.numeric(access$Refugees.assisted.by.UNHCR)
names(access)
access$Refugees <- as.numeric(access$Refugees)
access$Refugees.assisted.by.UNHCR <- as.numeric(access$Refugees.assisted.by.UNHCR)
access$Total.refugees.and.people.in.refugee.like.situations <- as.numeric(access$Total.refugees.and.people.in.refugee.like.situations)
access$Total.refugees.and.people.in.refugee.like.situations.assisted.by.UNHCR <- as.numeric(access$Total.refugees.and.people.in.refugee.like.situations.assisted.by.UNHCR")
access$Total.refugees.and.people.in.refugee.like.situations.assisted.by.UNHCR <-
as.numeric(access$Total.refugees.and.people.in.refugee.like.situations.assisted.by.UNHCR)
View(access)
?read.csv
access <- read.csv('data/unhcr-refugee-data.csv', colClasses = "character")
# Cleaning data
access$Refugees <- as.numeric(access$Refugees)
access$Refugees.assisted.by.UNHCR <- as.numeric(access$Refugees.assisted.by.UNHCR)
access$Total.refugees.and.people.in.refugee.like.situations <-
as.numeric(access$Total.refugees.and.people.in.refugee.like.situations)
access$Total.refugees.and.people.in.refugee.like.situations.assisted.by.UNHCR <-
as.numeric(access$Total.refugees.and.people.in.refugee.like.situations.assisted.by.UNHCR)
View(access)
access <- read.csv('data/unhcr-refugee-data.csv')
View(access)
access <- read.csv('data/unhcr-refugee-data.csv', colClasses = "character")
access$Refugees <- as.numeric(gsub(",","",access$Refugees))
access$Refugees <- as.numeric(gsub(",","",access$Refugees))
access$Refugees <- as.numeric(gsub(",","",access$Refugees.assisted.by.UNHCR))
access$Refugees <- as.numeric(gsub(",","",access$Total.refugees.and.people.in.refugee.like.situations))
access$Refugees <- as.numeric(gsub(",","",access$Total.refugees.and.people.in.refugee.like.situations))
View(access)
source('load_data.R')
access$Refugees <- as.numeric(gsub(",","",access$Refugees))
access$Refugees.assisted.by.UNHCR <- as.numeric(gsub(",","",access$Refugees.assisted.by.UNHCR))
access$Total.refugees.and.people.in.refugee.like.situations
<- as.numeric(gsub(",","",access$Total.refugees.and.people.in.refugee.like.situations))
access$Total.refugees.and.people.in.refugee.like.situations
<- as.numeric(gsub(",","",access$Total.refugees.and.people.in.refugee.like.situations))
# Deleting the comma.
access$Refugees <- as.numeric(gsub(",","",access$Refugees))
access$Refugees.assisted.by.UNHCR <- as.numeric(gsub(",","",access$Refugees.assisted.by.UNHCR))
access$Total.refugees.and.people.in.refugee.like.situations <-
as.numeric(gsub(",","",access$Total.refugees.and.people.in.refugee.like.situations))
access$Total.refugees.and.people.in.refugee.like.situations <-
as.numeric(gsub(",","",access$Total.refugees.and.people.in.refugee.like.situations))
View(access)
access$Refugees <- as.numeric(access$Refugees)
access$Refugees.assisted.by.UNHCR <- as.numeric(access$Refugees.assisted.by.UNHCR)
access$Total.refugees.and.people.in.refugee.like.situations <-
as.numeric(access$Total.refugees.and.people.in.refugee.like.situations)
access$Total.refugees.and.people.in.refugee.like.situations.assisted.by.UNHCR <-
as.numeric(access$Total.refugees.and.people.in.refugee.like.situations.assisted.by.UNHCR)
View(access)
source('~/.active-rstudio-document')
# Loading data and dependencies.
source('load_data.R')
# Cleaning data #
# Deleting the comma.
access$Refugees <- as.numeric(gsub(",","",access$Refugees))
access$Refugees.assisted.by.UNHCR <- as.numeric(gsub(",","",access$Refugees.assisted.by.UNHCR))
access$Total.refugees.and.people.in.refugee.like.situations <-
as.numeric(gsub(",","",access$Total.refugees.and.people.in.refugee.like.situations))
access$Total.refugees.and.people.in.refugee.like.situations <-
as.numeric(gsub(",","",access$Total.refugees.and.people.in.refugee.like.situations))
# Transforming the characters in numbers.
access$Refugees <- as.numeric(access$Refugees)
access$Refugees.assisted.by.UNHCR <- as.numeric(access$Refugees.assisted.by.UNHCR)
access$Total.refugees.and.people.in.refugee.like.situations <-
as.numeric(access$Total.refugees.and.people.in.refugee.like.situations)
access$Total.refugees.and.people.in.refugee.like.situations.assisted.by.UNHCR <-
as.numeric(access$Total.refugees.and.people.in.refugee.like.situations.assisted.by.UNHCR)
# Storing the csv.
StoreCsv()
access.codes <- read.csv('data/unhcr-refugee-countries.csv')
names(access.codes)
access.codes$Country.code <- toupper(access.codes$Country.code)
View(access.codes)
View(access.codes)
source('load_data.R')
# Cleaning data #
# Deleting the comma.
access$Refugees <- as.numeric(gsub(",","",access$Refugees))
access$Refugees.assisted.by.UNHCR <- as.numeric(gsub(",","",access$Refugees.assisted.by.UNHCR))
access$Total.refugees.and.people.in.refugee.like.situations <-
as.numeric(gsub(",","",access$Total.refugees.and.people.in.refugee.like.situations))
access$Total.refugees.and.people.in.refugee.like.situations <-
as.numeric(gsub(",","",access$Total.refugees.and.people.in.refugee.like.situations))
# Transforming the characters in numbers.
access$Refugees <- as.numeric(access$Refugees)
access$Refugees.assisted.by.UNHCR <- as.numeric(access$Refugees.assisted.by.UNHCR)
access$Total.refugees.and.people.in.refugee.like.situations <-
as.numeric(access$Total.refugees.and.people.in.refugee.like.situations)
access$Total.refugees.and.people.in.refugee.like.situations.assisted.by.UNHCR <-
as.numeric(access$Total.refugees.and.people.in.refugee.like.situations.assisted.by.UNHCR)
# Transorming the country codes in uppercase
access.codes$Country.code <- toupper(access.codes$Country.code)
# Storing the csv.
StoreCsv()
# comparing
nrow(popstats.long)  # 82355
nrow(access.recent)  # 14827
# table of years
popstatstable <- data.frame(table(popstats.long$period))
acctable <- data.frame(table(access.recent$Year))
# plotting
p1 <- ggplot(popstatstable) + theme_bw() +
geom_bar(aes(Var1, Freq), stat = 'identity',
fill = "#cccccc",
position = "dodge")
p2 <- ggplot(acctable) + theme_bw() +
geom_bar(aes(Var1, Freq),
stat = 'identity', fill = "#404040",
position = "dodge")
# subsetting refugee numbers only
popstats <- subset(popstats, popstats$Population.type == 'Refugees')
# Adding ISO3 Codes.
popstats$Country...territory.of.residence.iso3 <-
hdxdictionary(popstats$Country...territory.of.residence, 'country.name', 'iso2c')
popstats$Country...territory.of.residence.iso3 <-
hdxdictionary(popstats$Country...territory.of.residence.iso3, 'iso2c', 'iso3c')
popstats$Origin...Returned.from.iso3 <-
hdxdictionary(popstats$Origin...Returned.from, 'country.name', 'iso2c')
popstats$Origin...Returned.from.iso3 <-
hdxdictionary(popstats$Origin...Returned.from.iso3, 'iso2c', 'iso3c')
# from wide to long
popstats.long <- melt(popstats, id.vars = c("Origin...Returned.from.iso3", "Country...territory.of.residence.iso3","Origin...Returned.from", "Population.type", "Country...territory.of.residence"))
# comparing
nrow(popstats.long)  # 82355
nrow(access.recent)  # 14827
# table of years
popstatstable <- data.frame(table(popstats.long$period))
acctable <- data.frame(table(access.recent$Year))
# plotting
p1 <- ggplot(popstatstable) + theme_bw() +
geom_bar(aes(Var1, Freq), stat = 'identity',
fill = "#cccccc",
position = "dodge")
p2 <- ggplot(acctable) + theme_bw() +
geom_bar(aes(Var1, Freq),
stat = 'identity', fill = "#404040",
position = "dodge")
acctable <- data.frame(table(access.recent$Year))
access.recent <- access[access$Year >= 2000, ]
# comparing
nrow(popstats.long)  # 82355
nrow(access.recent)  # 14827
# table of years
popstatstable <- data.frame(table(popstats.long$period))
acctable <- data.frame(table(access.recent$Year))
# plotting
p1 <- ggplot(popstatstable) + theme_bw() +
geom_bar(aes(Var1, Freq), stat = 'identity',
fill = "#cccccc",
position = "dodge")
p2 <- ggplot(acctable) + theme_bw() +
geom_bar(aes(Var1, Freq),
stat = 'identity', fill = "#404040",
position = "dodge")
(table(popstats.long$period)
)
names(popstats.long)
popstatstable <- data.frame(table(popstats.long$varibable))
popstatstable <- data.frame(table(popstats.long$variable))
# plotting
p1 <- ggplot(popstatstable) + theme_bw() +
geom_bar(aes(Var1, Freq), stat = 'identity',
fill = "#cccccc",
position = "dodge")
p2 <- ggplot(acctable) + theme_bw() +
geom_bar(aes(Var1, Freq),
stat = 'identity', fill = "#404040",
position = "dodge")
p1
p2
p1
# # plotting
# ggplot(popstats.long) + theme_bw() +
#     geom_bar(aes(period, value), stat = 'identity')
#
# ggplot(access.recent) + theme_bw() +
#     geom_bar(data = access.recent, aes(Year, Refugees), stat = 'identity')
#
# plotting
p1 <- ggplot(popstats.long) + theme_bw() +
geom_bar(aes(period, value), stat = 'identity')
p2 <- ggplot(access.recent) + theme_bw() +
geom_bar(data = access.recent, aes(Year, Refugees), stat = 'identity')
p1
class(popstats.long)
names(popstats.long)
# plotting
p1 <- ggplot(popstats.long) + theme_bw() +
geom_bar(aes(variable, value), stat = 'identity')
p1
p1 <- ggplot(popstats.long) + theme_bw() +
geom_bar(aes(variable, value), stat = 'identity')
p1
p2 <- ggplot(access.recent) + theme_bw() +
geom_bar(data = access.recent, aes(Year, Refugees), stat = 'identity')
p2
ggsave(file = 'Access_database.png', plot = p2)
source('clean_data.R')
ggsave(file = 'graphics/Popstats_Site.png', plot = p1)
ggsave(file = 'graphics/Access_database.png', plot = p2)
gsub("X","",popstat.long$variable)
gsub("X","",popstats.long$variable)
popstats.long$variable <- gsub("X","",popstats.long$variable)
# plotting
p1 <- ggplot(popstats.long) + theme_bw() +
geom_bar(aes(variable, value), stat = 'identity')
p2 <- ggplot(access.recent) + theme_bw() +
geom_bar(data = access.recent, aes(Year, Refugees), stat = 'identity')
ggsave(file = 'graphics/Popstats_Site.png', plot = p1)
ggsave(file = 'graphics/Access_database.png', plot = p2)
names(access)
table(access$Year)
popstats.long$variable <- as.numeric(popstats.long$variable)
p1 <- ggplot(popstats.long) + theme_bw() +
geom_bar(aes(variable, value), stat = 'identity')
p1
names(popstats.long)
popstats.long$value <- as.numeric(popstats.long$value)
p1 <- ggplot(popstats.long) + theme_bw() +
geom_bar(aes(variable, value), stat = 'identity')
pq
oq
p1
ggsave(file = 'graphics/Popstats_Site.png', plot = p1)
